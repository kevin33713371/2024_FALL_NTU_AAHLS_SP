-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mmult_mmult_Pipeline_readA is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sext_ln82 : IN STD_LOGIC_VECTOR (61 downto 0);
    mul : IN STD_LOGIC_VECTOR (31 downto 0);
    a_col : IN STD_LOGIC_VECTOR (31 downto 0);
    a : IN STD_LOGIC_VECTOR (63 downto 0);
    localA_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_ce0 : OUT STD_LOGIC;
    localA_we0 : OUT STD_LOGIC;
    localA_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_1_ce0 : OUT STD_LOGIC;
    localA_1_we0 : OUT STD_LOGIC;
    localA_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_2_ce0 : OUT STD_LOGIC;
    localA_2_we0 : OUT STD_LOGIC;
    localA_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_3_ce0 : OUT STD_LOGIC;
    localA_3_we0 : OUT STD_LOGIC;
    localA_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_4_ce0 : OUT STD_LOGIC;
    localA_4_we0 : OUT STD_LOGIC;
    localA_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_5_ce0 : OUT STD_LOGIC;
    localA_5_we0 : OUT STD_LOGIC;
    localA_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_6_ce0 : OUT STD_LOGIC;
    localA_6_we0 : OUT STD_LOGIC;
    localA_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_7_ce0 : OUT STD_LOGIC;
    localA_7_we0 : OUT STD_LOGIC;
    localA_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_8_ce0 : OUT STD_LOGIC;
    localA_8_we0 : OUT STD_LOGIC;
    localA_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_9_ce0 : OUT STD_LOGIC;
    localA_9_we0 : OUT STD_LOGIC;
    localA_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_10_ce0 : OUT STD_LOGIC;
    localA_10_we0 : OUT STD_LOGIC;
    localA_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_11_ce0 : OUT STD_LOGIC;
    localA_11_we0 : OUT STD_LOGIC;
    localA_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_12_ce0 : OUT STD_LOGIC;
    localA_12_we0 : OUT STD_LOGIC;
    localA_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_13_ce0 : OUT STD_LOGIC;
    localA_13_we0 : OUT STD_LOGIC;
    localA_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_14_ce0 : OUT STD_LOGIC;
    localA_14_we0 : OUT STD_LOGIC;
    localA_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_15_ce0 : OUT STD_LOGIC;
    localA_15_we0 : OUT STD_LOGIC;
    localA_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_16_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_16_ce0 : OUT STD_LOGIC;
    localA_16_we0 : OUT STD_LOGIC;
    localA_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_17_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_17_ce0 : OUT STD_LOGIC;
    localA_17_we0 : OUT STD_LOGIC;
    localA_17_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_18_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_18_ce0 : OUT STD_LOGIC;
    localA_18_we0 : OUT STD_LOGIC;
    localA_18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_19_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_19_ce0 : OUT STD_LOGIC;
    localA_19_we0 : OUT STD_LOGIC;
    localA_19_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_20_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_20_ce0 : OUT STD_LOGIC;
    localA_20_we0 : OUT STD_LOGIC;
    localA_20_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_21_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_21_ce0 : OUT STD_LOGIC;
    localA_21_we0 : OUT STD_LOGIC;
    localA_21_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_22_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_22_ce0 : OUT STD_LOGIC;
    localA_22_we0 : OUT STD_LOGIC;
    localA_22_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_23_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_23_ce0 : OUT STD_LOGIC;
    localA_23_we0 : OUT STD_LOGIC;
    localA_23_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_24_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_24_ce0 : OUT STD_LOGIC;
    localA_24_we0 : OUT STD_LOGIC;
    localA_24_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_25_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_25_ce0 : OUT STD_LOGIC;
    localA_25_we0 : OUT STD_LOGIC;
    localA_25_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_26_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_26_ce0 : OUT STD_LOGIC;
    localA_26_we0 : OUT STD_LOGIC;
    localA_26_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_27_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_27_ce0 : OUT STD_LOGIC;
    localA_27_we0 : OUT STD_LOGIC;
    localA_27_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_28_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_28_ce0 : OUT STD_LOGIC;
    localA_28_we0 : OUT STD_LOGIC;
    localA_28_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_29_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_29_ce0 : OUT STD_LOGIC;
    localA_29_we0 : OUT STD_LOGIC;
    localA_29_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_30_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_30_ce0 : OUT STD_LOGIC;
    localA_30_we0 : OUT STD_LOGIC;
    localA_30_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_31_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    localA_31_ce0 : OUT STD_LOGIC;
    localA_31_we0 : OUT STD_LOGIC;
    localA_31_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of mmult_mmult_Pipeline_readA is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gmem0_blk_n_AR : STD_LOGIC;
    signal gmem0_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln78_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln78_reg_814 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln76_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln78_reg_814_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln82_fu_696_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln82_reg_819 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln82_reg_819_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal gmem0_addr_read_reg_823 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal zext_ln82_fu_732_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln82_cast_fu_640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_6_fu_700_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_725_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln76_fu_674_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_5_fu_688_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln79_fu_719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state8)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_2_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((m_axi_gmem0_ARREADY = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_2_fu_180 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_2_fu_180 <= i_fu_725_p3;
            end if; 
        end if;
    end process;

    j_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((m_axi_gmem0_ARREADY = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_fu_176 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln76_fu_669_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_fu_176 <= j_6_fu_700_p2;
            end if; 
        end if;
    end process;

    loc_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((m_axi_gmem0_ARREADY = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                loc_fu_184 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln76_fu_669_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                loc_fu_184 <= add_ln76_fu_674_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                gmem0_addr_read_reg_823 <= m_axi_gmem0_RDATA;
                icmp_ln78_reg_814_pp0_iter1_reg <= icmp_ln78_reg_814;
                trunc_ln82_reg_819_pp0_iter1_reg <= trunc_ln82_reg_819;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln76_fu_669_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln78_reg_814 <= icmp_ln78_fu_683_p2;
                trunc_ln82_reg_819 <= trunc_ln82_fu_696_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem0_ARREADY, ap_enable_reg_pp0_iter1, icmp_ln76_fu_669_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((m_axi_gmem0_ARREADY = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln76_fu_669_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln76_fu_669_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln76_fu_674_p2 <= std_logic_vector(unsigned(loc_fu_184) + unsigned(ap_const_lv32_1));
    add_ln79_fu_719_p2 <= std_logic_vector(unsigned(i_2_fu_180) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, m_axi_gmem0_ARREADY)
    begin
        if (((m_axi_gmem0_ARREADY = ap_const_logic_0) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(m_axi_gmem0_RVALID, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem0_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(m_axi_gmem0_RVALID, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem0_RVALID = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter1_assign_proc : process(m_axi_gmem0_RVALID)
    begin
                ap_block_state9_pp0_stage0_iter1 <= (m_axi_gmem0_RVALID = ap_const_logic_0);
    end process;


    ap_condition_pp0_exit_iter0_state8_assign_proc : process(icmp_ln76_fu_669_p2)
    begin
        if ((icmp_ln76_fu_669_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AR_assign_proc : process(ap_start, ap_CS_fsm_state1, m_axi_gmem0_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            gmem0_blk_n_AR <= m_axi_gmem0_ARREADY;
        else 
            gmem0_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_R_assign_proc : process(m_axi_gmem0_RVALID, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gmem0_blk_n_R <= m_axi_gmem0_RVALID;
        else 
            gmem0_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    i_fu_725_p3 <= 
        add_ln79_fu_719_p2 when (icmp_ln78_reg_814_pp0_iter1_reg(0) = '1') else 
        i_2_fu_180;
    icmp_ln76_fu_669_p2 <= "1" when (loc_fu_184 = mul) else "0";
    icmp_ln78_fu_683_p2 <= "1" when (j_fu_176 = a_col) else "0";
    j_5_fu_688_p3 <= 
        ap_const_lv32_0 when (icmp_ln78_fu_683_p2(0) = '1') else 
        j_fu_176;
    j_6_fu_700_p2 <= std_logic_vector(unsigned(j_5_fu_688_p3) + unsigned(ap_const_lv32_1));
    localA_10_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_10_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_10_ce0 <= ap_const_logic_1;
        else 
            localA_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_10_d0 <= gmem0_addr_read_reg_823;

    localA_10_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_10_we0 <= ap_const_logic_1;
        else 
            localA_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_11_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_11_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_11_ce0 <= ap_const_logic_1;
        else 
            localA_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_11_d0 <= gmem0_addr_read_reg_823;

    localA_11_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_11_we0 <= ap_const_logic_1;
        else 
            localA_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_12_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_12_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_12_ce0 <= ap_const_logic_1;
        else 
            localA_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_12_d0 <= gmem0_addr_read_reg_823;

    localA_12_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_12_we0 <= ap_const_logic_1;
        else 
            localA_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_13_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_13_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_13_ce0 <= ap_const_logic_1;
        else 
            localA_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_13_d0 <= gmem0_addr_read_reg_823;

    localA_13_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_13_we0 <= ap_const_logic_1;
        else 
            localA_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_14_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_14_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_14_ce0 <= ap_const_logic_1;
        else 
            localA_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_14_d0 <= gmem0_addr_read_reg_823;

    localA_14_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_14_we0 <= ap_const_logic_1;
        else 
            localA_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_15_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_15_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_15_ce0 <= ap_const_logic_1;
        else 
            localA_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_15_d0 <= gmem0_addr_read_reg_823;

    localA_15_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_15_we0 <= ap_const_logic_1;
        else 
            localA_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_16_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_16_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_16_ce0 <= ap_const_logic_1;
        else 
            localA_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_16_d0 <= gmem0_addr_read_reg_823;

    localA_16_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_10) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_16_we0 <= ap_const_logic_1;
        else 
            localA_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_17_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_17_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_17_ce0 <= ap_const_logic_1;
        else 
            localA_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_17_d0 <= gmem0_addr_read_reg_823;

    localA_17_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_11) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_17_we0 <= ap_const_logic_1;
        else 
            localA_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_18_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_18_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_18_ce0 <= ap_const_logic_1;
        else 
            localA_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_18_d0 <= gmem0_addr_read_reg_823;

    localA_18_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_12) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_18_we0 <= ap_const_logic_1;
        else 
            localA_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_19_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_19_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_19_ce0 <= ap_const_logic_1;
        else 
            localA_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_19_d0 <= gmem0_addr_read_reg_823;

    localA_19_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_13) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_19_we0 <= ap_const_logic_1;
        else 
            localA_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_1_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_1_ce0 <= ap_const_logic_1;
        else 
            localA_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_1_d0 <= gmem0_addr_read_reg_823;

    localA_1_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_1_we0 <= ap_const_logic_1;
        else 
            localA_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_20_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_20_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_20_ce0 <= ap_const_logic_1;
        else 
            localA_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_20_d0 <= gmem0_addr_read_reg_823;

    localA_20_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_14) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_20_we0 <= ap_const_logic_1;
        else 
            localA_20_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_21_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_21_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_21_ce0 <= ap_const_logic_1;
        else 
            localA_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_21_d0 <= gmem0_addr_read_reg_823;

    localA_21_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_15) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_21_we0 <= ap_const_logic_1;
        else 
            localA_21_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_22_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_22_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_22_ce0 <= ap_const_logic_1;
        else 
            localA_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_22_d0 <= gmem0_addr_read_reg_823;

    localA_22_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_16) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_22_we0 <= ap_const_logic_1;
        else 
            localA_22_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_23_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_23_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_23_ce0 <= ap_const_logic_1;
        else 
            localA_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_23_d0 <= gmem0_addr_read_reg_823;

    localA_23_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_17) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_23_we0 <= ap_const_logic_1;
        else 
            localA_23_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_24_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_24_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_24_ce0 <= ap_const_logic_1;
        else 
            localA_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_24_d0 <= gmem0_addr_read_reg_823;

    localA_24_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_18) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_24_we0 <= ap_const_logic_1;
        else 
            localA_24_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_25_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_25_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_25_ce0 <= ap_const_logic_1;
        else 
            localA_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_25_d0 <= gmem0_addr_read_reg_823;

    localA_25_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_19) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_25_we0 <= ap_const_logic_1;
        else 
            localA_25_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_26_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_26_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_26_ce0 <= ap_const_logic_1;
        else 
            localA_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_26_d0 <= gmem0_addr_read_reg_823;

    localA_26_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_1A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_26_we0 <= ap_const_logic_1;
        else 
            localA_26_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_27_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_27_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_27_ce0 <= ap_const_logic_1;
        else 
            localA_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_27_d0 <= gmem0_addr_read_reg_823;

    localA_27_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_1B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_27_we0 <= ap_const_logic_1;
        else 
            localA_27_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_28_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_28_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_28_ce0 <= ap_const_logic_1;
        else 
            localA_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_28_d0 <= gmem0_addr_read_reg_823;

    localA_28_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_1C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_28_we0 <= ap_const_logic_1;
        else 
            localA_28_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_29_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_29_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_29_ce0 <= ap_const_logic_1;
        else 
            localA_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_29_d0 <= gmem0_addr_read_reg_823;

    localA_29_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_1D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_29_we0 <= ap_const_logic_1;
        else 
            localA_29_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_2_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_2_ce0 <= ap_const_logic_1;
        else 
            localA_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_2_d0 <= gmem0_addr_read_reg_823;

    localA_2_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_2_we0 <= ap_const_logic_1;
        else 
            localA_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_30_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_30_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_30_ce0 <= ap_const_logic_1;
        else 
            localA_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_30_d0 <= gmem0_addr_read_reg_823;

    localA_30_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_1E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_30_we0 <= ap_const_logic_1;
        else 
            localA_30_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_31_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_31_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_31_ce0 <= ap_const_logic_1;
        else 
            localA_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_31_d0 <= gmem0_addr_read_reg_823;

    localA_31_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_1F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_31_we0 <= ap_const_logic_1;
        else 
            localA_31_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_3_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_3_ce0 <= ap_const_logic_1;
        else 
            localA_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_3_d0 <= gmem0_addr_read_reg_823;

    localA_3_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_3_we0 <= ap_const_logic_1;
        else 
            localA_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_4_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_4_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_4_ce0 <= ap_const_logic_1;
        else 
            localA_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_4_d0 <= gmem0_addr_read_reg_823;

    localA_4_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_4_we0 <= ap_const_logic_1;
        else 
            localA_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_5_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_5_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_5_ce0 <= ap_const_logic_1;
        else 
            localA_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_5_d0 <= gmem0_addr_read_reg_823;

    localA_5_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_5_we0 <= ap_const_logic_1;
        else 
            localA_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_6_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_6_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_6_ce0 <= ap_const_logic_1;
        else 
            localA_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_6_d0 <= gmem0_addr_read_reg_823;

    localA_6_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_6_we0 <= ap_const_logic_1;
        else 
            localA_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_7_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_7_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_7_ce0 <= ap_const_logic_1;
        else 
            localA_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_7_d0 <= gmem0_addr_read_reg_823;

    localA_7_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_7_we0 <= ap_const_logic_1;
        else 
            localA_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_8_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_8_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_8_ce0 <= ap_const_logic_1;
        else 
            localA_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_8_d0 <= gmem0_addr_read_reg_823;

    localA_8_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_8_we0 <= ap_const_logic_1;
        else 
            localA_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_9_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_9_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_9_ce0 <= ap_const_logic_1;
        else 
            localA_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_9_d0 <= gmem0_addr_read_reg_823;

    localA_9_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_9_we0 <= ap_const_logic_1;
        else 
            localA_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_address0 <= zext_ln82_fu_732_p1(5 - 1 downto 0);

    localA_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_ce0 <= ap_const_logic_1;
        else 
            localA_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    localA_d0 <= gmem0_addr_read_reg_823;

    localA_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln82_reg_819_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln82_reg_819_pp0_iter1_reg = ap_const_lv5_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            localA_we0 <= ap_const_logic_1;
        else 
            localA_we0 <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_ARADDR <= sext_ln82_cast_fu_640_p1;
    m_axi_gmem0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem0_ARID <= ap_const_lv1_0;
    m_axi_gmem0_ARLEN <= mul;
    m_axi_gmem0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem0_ARUSER <= ap_const_lv1_0;

    m_axi_gmem0_ARVALID_assign_proc : process(ap_start, ap_CS_fsm_state1, m_axi_gmem0_ARREADY)
    begin
        if ((not(((m_axi_gmem0_ARREADY = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem0_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem0_AWID <= ap_const_lv1_0;
    m_axi_gmem0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem0_AWVALID <= ap_const_logic_0;
    m_axi_gmem0_BREADY <= ap_const_logic_0;

    m_axi_gmem0_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_gmem0_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_WDATA <= ap_const_lv32_0;
    m_axi_gmem0_WID <= ap_const_lv1_0;
    m_axi_gmem0_WLAST <= ap_const_logic_0;
    m_axi_gmem0_WSTRB <= ap_const_lv4_0;
    m_axi_gmem0_WUSER <= ap_const_lv1_0;
    m_axi_gmem0_WVALID <= ap_const_logic_0;
        sext_ln82_cast_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln82),64));

    trunc_ln82_fu_696_p1 <= j_5_fu_688_p3(5 - 1 downto 0);
    zext_ln82_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_725_p3),64));
end behav;
